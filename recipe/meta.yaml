{% set name = "gdb" %}
{% set version = "16.3" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://ftp.gnu.org/gnu/gdb/gdb-{{ version }}.tar.xz
  sha256: bcfcd095528a987917acf9fff3f1672181694926cc18d609c99d0042c00224c5
  patches:

build:
  number: 2
  skip: true  # [win]
  # needed by macOS codesigning script
  script_env:
    - TMPDIR

# AnacondaRecipes has been resynced with conda-forge and the
# gdb-pretty-printer output has been moved to
# ctng-compilers-feedstock.

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - gnuconfig  # [unix]
    - {{ compiler('fortran') }}
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - make >=3.82
  host:
    - python
    - ncurses
    - texinfo
    - xz
    - zlib
    - readline
    - libiconv
    - expat
    - gmp
    - mpfr
    # python .../python-config.py --ldflags report -lcrypt for 3.9 and
    # 3.10 which is subsequently used during configure and later
    # during make. libcrypt-devel has the libcrypt.so itself
    - libxcrypt-devel-el8-aarch64  # [linux and aarch64 and py<311]
    - libxcrypt-devel-el8-x86_64   # [linux and x86_64 and py<311]
  run:
    - python
    - ncurses
    - xz
    - zlib
    - six
    - libiconv
    - expat
    - pygments
    # Just the libcrypt.so.x* files at runtime
    - libxcrypt-el8-aarch64  # [linux and aarch64 and py<311]
    - libxcrypt-el8-x86_64   # [linux and x86_64 and py<311]

test:
  commands:
    - $PREFIX/bin/gdb --version
    - $PREFIX/bin/gdb -q -ex "show host-charset" --batch
  requires:
    - {{ compiler('c') }}

about:
  home: https://www.gnu.org/software/gdb/
  license: GPL-3.0-only
  license_family: GPL
  license_file: gdb/COPYING
  summary: GDB, the GNU Project debugger, allows you to see what is going on inside another program while it executes -- or what another program was doing at the moment it crashed.
  description: |
    GDB, the GNU Project debugger, allows you to see what is going on `inside'
    another program while it executes -- or what another program was doing at
    the moment it crashed.
    The program being debugged can be written in Ada, C, C++, Objective-C,
    Pascal (and many other languages). Those programs might be executing on the
    same machine as GDB (native) or on another machine (remote).
    GDB can run on most popular UNIX and Microsoft Windows variants.
  doc_url: https://sourceware.org/gdb/current/onlinedocs/gdb/
  dev_url: https://sourceware.org/git/binutils-gdb.git

extra:
  recipe-maintainers:
    - gqmelo
    - marcelotrevisani
    - phil-blain
    - matthiasdiener
